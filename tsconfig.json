{
  // TypeScript 컴파일러의 옵션들을 지정하는 속성
  "compilerOptions": {
    "target": "ES6", // ECMAScript 목표 버전 설정: 'ES3'(기본), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018', 'ES2019', 'ES2020', or 'ESNEXT'.
    "lib": ["es6", "dom.iterable", "dom", "scripthost"], // 컴파일 과정에 사용될 라이브러리 파일 설정
    "experimentalDecorators": true, // ES7 데코레이터(decorators) 실험 기능 지원 설정
    "emitDecoratorMetadata": true, // 데코레이터를 위한 유형 메타데이터 방출 실험 기능 지원 설정
    "module": "commonjs", // 생성될 모듈 코드 설정: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'.
    "moduleResolution": "node", // 모듈 분석 방법 설정: 'node' (Node.js) 또는 'classic' (TypeScript pre-1.6).
    "baseUrl": "./", // 절대 경로 모듈이 아닌, 모듈이 기본적으로 위치한 디렉토리 설정
    "paths": {
      // 'baseUrl'을 기준으로 상대 위치로 가져오기를 다시 매핑하는 항목 설정
      "~/*": ["./*"],
      "@/*": ["./src/*"],
      "@img/*": ["./src/assets/images/*"],
      "@page/*": ["./src/pages/*"],
      "@view/*": ["./src/views/*"],
      "@comp/*": ["./src/components/*"],
      "@utils/*": ["src/utils/*"]
    },
    "outDir": "./dist", // 출력될 디렉토리 설정
    "resolveJsonModule": true, // ts 파일에서 json imoprt 허용
    "esModuleInterop": true, // 모든 가져오기에 대한 네임스페이스 객체 생성을 통해 CommonJS와 ES 모듈 간의 상호 운용성을 제공
    "forceConsistentCasingInFileNames": true, //파일의 이름을 대소문자 판별하게 하는 옵션
    "allowJs": true, // JavaScript 파일 컴파일 허용
    "checkJs": true, // 일반 js 파일에서도 에러체크 여부
    "noEmit": true, // 출력 방출(emit) 유무 설정
    "sourceMap": true, // 소스맵 '.map' 파일 생성 설정
    "removeComments": true, // true면 컴파일된 js에 기존의 주석을 모두 제거
    "noEmitOnError": true, // 컴파일 에러가 있으면 js 컴파일 하지 않음
    "declaration": true, //컴파일시 .d.ts 파일도 자동으로 함께생성 (현재쓰는 모든 타입이 정의된 파일)
    "strict": true, // 모든 엄격한 유형 검사 옵션 활성화
    "jsx": "react"
  },
  // 컴파일 대상에서 제외할 파일들을 지정하는 속성
  "exclude": ["node_modules", "**/*.test.ts"],
  // 타입 습득(type acquisition)과 관련된 옵션들을 지정하는 속성
  "typeAcquisition": {
    "enable": true,
    "include": ["jquery"],
    "exclude": ["react"]
  }
}
